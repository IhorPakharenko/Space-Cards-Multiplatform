import kotlin.Int;
import kotlinx.datetime.Instant;

CREATE TABLE AstrobinImageEntity (
    id INTEGER AS Int NOT NULL PRIMARY KEY,
    bookmarks INTEGER AS Int NOT NULL,
    comments INTEGER AS Int NOT NULL,
    dataSource TEXT,
    description TEXT,
    license INTEGER AS Int NOT NULL,
    licenseName TEXT,
    likes INTEGER AS Int NOT NULL,
    publishedAt TEXT AS Instant NOT NULL,
    title TEXT,
    updatedAt TEXT AS Instant NOT NULL,
    uploadedAt TEXT AS Instant NOT NULL,
    urlGallery TEXT,
    urlHd TEXT NOT NULL,
    urlHistogram TEXT,
    urlReal TEXT NOT NULL,
    urlRegular TEXT,
    urlThumb TEXT,
    user TEXT NOT NULL,
    views INTEGER AS Int NOT NULL,
    bookmarkedAt TEXT AS Instant,
    viewedAt TEXT AS Instant
);

insertEntity:
INSERT INTO AstrobinImageEntity VALUES ?;

selectById:
SELECT * FROM AstrobinImageEntity WHERE id = ? LIMIT 1;

selectByUploadedAt:
SELECT * FROM AstrobinImageEntity
WHERE (:isBookmarked IS NULL OR (bookmarkedAt IS NOT NULL) = :isBookmarked)
AND (:isViewed IS NULL OR (viewedAt IS NOT NULL) = :isViewed)
AND (:uploadedEarlierThan IS NULL OR uploadedAt < :uploadedEarlierThan)
ORDER BY uploadedAt DESC
LIMIT :limit
OFFSET :offset;

selectByBookmarkedAt:
SELECT * FROM AstrobinImageEntity
WHERE (:isBookmarked IS NULL OR (bookmarkedAt IS NOT NULL) = :isBookmarked)
AND (:isViewed IS NULL OR (viewedAt IS NOT NULL) = :isViewed)
ORDER BY
    CASE WHEN :shouldSortAscending = 1 THEN bookmarkedAt END ASC,
    CASE WHEN :shouldSortAscending = 0 THEN bookmarkedAt END DESC
LIMIT :limit
OFFSET :offset;

upsertEntity:
INSERT OR REPLACE INTO AstrobinImageEntity VALUES ?;

insertEntityOrIgnore:
INSERT OR IGNORE INTO AstrobinImageEntity (
    id, bookmarks, comments, dataSource, description,
    license, licenseName, likes, publishedAt, title, updatedAt, uploadedAt,
    urlGallery, urlHd, urlHistogram, urlReal, urlRegular, urlThumb,
    user, views, bookmarkedAt, viewedAt
) VALUES ?;

selectLastInsertRowId:
SELECT last_insert_rowid();

update:
UPDATE AstrobinImageEntity SET
    bookmarks = ?,
    comments = ?,
    dataSource = ?,
    description = ?,
    license = ?,
    licenseName = ?,
    likes = ?,
    publishedAt = ?,
    title = ?,
    updatedAt = ?,
    uploadedAt = ?,
    urlGallery = ?,
    urlHd = ?,
    urlHistogram = ?,
    urlReal = ?,
    urlRegular = ?,
    urlThumb = ?,
    user = ?,
    views = ?
WHERE id = ?;

setBookmarkedAt:
UPDATE AstrobinImageEntity SET bookmarkedAt = ? WHERE id = ?;

setViewedAt:
UPDATE AstrobinImageEntity SET viewedAt = ? WHERE id = ?;

resetViewedAtForAll:
UPDATE AstrobinImageEntity SET viewedAt = NULL;

deleteAll:
DELETE FROM AstrobinImageEntity WHERE (bookmarkedAt IS NOT NULL) = :isBookmarked;
